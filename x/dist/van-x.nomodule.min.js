{window.vanX={};let e,t,r=Object,{get:l,set:o,deleteProperty:n}=Reflect,f=Symbol,{state:i,derive:a,add:d,tags:c}=van,s=1e3,u=f(),w=f(),y=f(),m=f(),g=f(),p=e=>(e[y]=1,e),v=e=>e[y]?a(()=>P(e())):i(P(e)),P=e=>{if(!(e instanceof r)||e[u])return e;let t=new Proxy((e[u]=r.fromEntries(r.entries(e).map(([e,t])=>[e,v(t)])),e[w]=e,e[m]=[],e),{get:(e,r)=>e[u][r]?.val??l(e,r,t),set(e,t,r){let l=e[u];return t in l?(l[t].val=P(r),1):(t in e||o(l,t,v(r))&&j(e,t,l[t]),o(e,t,r))},deleteProperty:(e,t)=>(n(e[u],t)&&x(e,t),n(e,t))});return t},b=e=>e[u],D=e=>e[m]=e[m].filter(e=>e.t.isConnected),S=(e,t,r,l)=>()=>{let o=l(r,()=>delete e[t]);return o[g]=t,o},_=(e,t,r,l)=>d(l.t,S(e,t,r,l.f)),j=(e,r,l)=>D(e).forEach(_.bind(t,e,r,l)),x=(e,t)=>{for(let r of D(e))[...r.t.childNodes].find(e=>e[g]===t)?.remove()},A=r=>(e??(setTimeout(()=>(e.forEach(D),e=t),s),e=new Set)).add(r),F=(e,t,l)=>{let o={t:e(),f:l};t[m].push(o),A(t);for(let[e,l]of r.entries(t[u]))_(t,e,l,o);return o.t},O=(e,t)=>{let l=Array.isArray(e)?r.entries(t(e.filter(e=>1))):t(r.entries(e)),o=e[w],n=r.fromEntries(l),f=e[u],i=r.fromEntries(l.map(([e,t])=>{let r=f[e];return r?r.val=t:r=v(t),[e,r]}));for(let{t:t,f:l}of D(e)){let o={};for(let e of[...t.childNodes])e[g]in i?o[e[g]]=e:e.remove();let n=t.firstChild;for(let[f,a]of r.entries(i))n===o[f]?n=n.nextSibling:t.insertBefore(o[f]??c.div(S(e,f,a,l)).firstChild,n)}for(let e in o)delete o[e];for(let e in n)o[e]=n[e];e[u]=i};window.vanX={calc:p,reactive:P,stateFields:b,list:F,replace:O}}